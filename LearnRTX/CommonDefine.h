#ifndef _COMMOM_DEFINE_H_
#define _COMMOM_DEFINE_H_

#include<CppUtil/OpenGL/Scene.h>

CppUtil::OpenGL::SceneRA* CreateScene_CornellBox();

void renderScreen();
void renderCube();

const float data_ScreenVertices[] = { // vertex attributes for a quad that fills the entire screen in Normalized Device Coordinates.
		// positions   // texCoords
		-1.0f,  1.0f,  0.0f, 1.0f,
		-1.0f, -1.0f,  0.0f, 0.0f,
		 1.0f, -1.0f,  1.0f, 0.0f,

		-1.0f,  1.0f,  0.0f, 1.0f,
		 1.0f, -1.0f,  1.0f, 0.0f,
		 1.0f,  1.0f,  1.0f, 1.0f
};

const float triangleData_P[] = {
		-0.5f, -0.5f, 0.0f, // Left  
		 0.5f, -0.5f, 0.0f, // Right 
		 0.0f,  0.5f, 0.0f  // Top   
};

const float cubeData_PN[216] = {
	// positions	   // normals
	//up
	-0.5,  0.5,  0.5,  0,  1,  0,
	 0.5,  0.5,  0.5,  0,  1,  0,
	-0.5,  0.5, -0.5,  0,  1,  0,
	 0.5,  0.5, -0.5,  0,  1,  0,
	-0.5,  0.5, -0.5,  0,  1,  0,
	 0.5,  0.5,  0.5,  0,  1,  0,
	 //down
	-0.5, -0.5,  0.5,  0, -1,  0,
	 0.5, -0.5,  0.5,  0, -1,  0,
	-0.5, -0.5, -0.5,  0, -1,  0,
	 0.5, -0.5, -0.5,  0, -1,  0,
	-0.5, -0.5, -0.5,  0, -1,  0,
	 0.5, -0.5,  0.5,  0, -1,  0,
	 //left
	-0.5, -0.5,  0.5, -1,  0,  0,
	-0.5, -0.5, -0.5, -1,  0,  0,
	-0.5,  0.5,  0.5, -1,  0,  0,
	-0.5,  0.5, -0.5, -1,  0,  0,
	-0.5,  0.5,  0.5, -1,  0,  0,
	-0.5, -0.5, -0.5, -1,  0,  0,
	//right
	0.5, -0.5,  0.5,  1,  0,  0,
	0.5, -0.5, -0.5,  1,  0,  0,
	0.5,  0.5,  0.5,  1,  0,  0,
	0.5,  0.5, -0.5,  1,  0,  0,
	0.5,  0.5,  0.5,  1,  0,  0,
	0.5, -0.5, -0.5,  1,  0,  0,
	//front
   -0.5, -0.5,  0.5,  0,  0,  1,
	0.5, -0.5,  0.5,  0,  0,  1,
   -0.5,  0.5,  0.5,  0,  0,  1,
	0.5,  0.5,  0.5,  0,  0,  1,
   -0.5,  0.5,  0.5,  0,  0,  1,
	0.5, -0.5,  0.5,  0,  0,  1,
	//back
   -0.5, -0.5, -0.5,  0,  0, -1,
	0.5, -0.5, -0.5,  0,  0, -1,
   -0.5,  0.5, -0.5,  0,  0, -1,
	0.5,  0.5, -0.5,  0,  0, -1,
   -0.5,  0.5, -0.5,  0,  0, -1,
	0.5, -0.5, -0.5,  0,  0, -1,
};


const float squareData[36] = {
	// positions     // normals
	-0.5, -0.5,  0,  0,  0,  1,
	 0.5, -0.5,  0,  0,  0,  1,
	-0.5,  0.5,  0,  0,  0,  1,
	 0.5,  0.5,  0,  0,  0,  1,
	-0.5,  0.5,  0,  0,  0,  1,
	 0.5, -0.5,  0,  0,  0,  1,
};

const float cubeData_PT[] = {
		-0.5f, -0.5f, -0.5f,  0.0f, 0.0f,
		 0.5f, -0.5f, -0.5f,  1.0f, 0.0f,
		 0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
		 0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
		-0.5f,  0.5f, -0.5f,  0.0f, 1.0f,
		-0.5f, -0.5f, -0.5f,  0.0f, 0.0f,

		-0.5f, -0.5f,  0.5f,  0.0f, 0.0f,
		 0.5f, -0.5f,  0.5f,  1.0f, 0.0f,
		 0.5f,  0.5f,  0.5f,  1.0f, 1.0f,
		 0.5f,  0.5f,  0.5f,  1.0f, 1.0f,
		-0.5f,  0.5f,  0.5f,  0.0f, 1.0f,
		-0.5f, -0.5f,  0.5f,  0.0f, 0.0f,

		-0.5f,  0.5f,  0.5f,  1.0f, 0.0f,
		-0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
		-0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
		-0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
		-0.5f, -0.5f,  0.5f,  0.0f, 0.0f,
		-0.5f,  0.5f,  0.5f,  1.0f, 0.0f,

		 0.5f,  0.5f,  0.5f,  1.0f, 0.0f,
		 0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
		 0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
		 0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
		 0.5f, -0.5f,  0.5f,  0.0f, 0.0f,
		 0.5f,  0.5f,  0.5f,  1.0f, 0.0f,

		-0.5f, -0.5f, -0.5f,  0.0f, 1.0f,
		 0.5f, -0.5f, -0.5f,  1.0f, 1.0f,
		 0.5f, -0.5f,  0.5f,  1.0f, 0.0f,
		 0.5f, -0.5f,  0.5f,  1.0f, 0.0f,
		-0.5f, -0.5f,  0.5f,  0.0f, 0.0f,
		-0.5f, -0.5f, -0.5f,  0.0f, 1.0f,

		-0.5f,  0.5f, -0.5f,  0.0f, 1.0f,
		 0.5f,  0.5f, -0.5f,  1.0f, 1.0f,
		 0.5f,  0.5f,  0.5f,  1.0f, 0.0f,
		 0.5f,  0.5f,  0.5f,  1.0f, 0.0f,
		-0.5f,  0.5f,  0.5f,  0.0f, 0.0f,
		-0.5f,  0.5f, -0.5f,  0.0f, 1.0f
};

//const float quadData[] = {
//	// Positions          // Colors           // Texture Coords
//	 0.5f,  0.5f, 0.0f,   1.0f, 0.0f, 0.0f,   1.0f, 1.0f, // Top Right
//	 0.5f, -0.5f, 0.0f,   0.0f, 1.0f, 0.0f,   1.0f, 0.0f, // Bottom Right
//	-0.5f, -0.5f, 0.0f,   0.0f, 0.0f, 1.0f,   0.0f, 0.0f, // Bottom Left
//	-0.5f,  0.5f, 0.0f,   1.0f, 1.0f, 0.0f,   0.0f, 1.0f  // Top Left 
//};
//unsigned int quadIndices[] = {  // Note that we start from 0!
//		0, 1, 3, // First Triangle
//		1, 2, 3  // Second Triangle
//};


//glm::vec3 cubePositions[] = {
//		glm::vec3(0.0f,  0.0f,  0.0f),
//		glm::vec3(2.0f,  5.0f, -15.0f),
//		glm::vec3(-1.5f, -2.2f, -2.5f),
//		glm::vec3(-3.8f, -2.0f, -12.3f),
//		glm::vec3(2.4f, -0.4f, -3.5f),
//		glm::vec3(-1.7f,  3.0f, -7.5f),
//		glm::vec3(1.3f, -2.0f, -2.5f),
//		glm::vec3(1.5f,  2.0f, -2.5f),
//		glm::vec3(1.5f,  0.2f, -1.5f),
//		glm::vec3(-1.3f,  1.0f, -1.5f)
//};
#endif// !_COMMOM_DEFINE_H_